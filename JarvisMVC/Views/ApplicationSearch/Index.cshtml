@model JarvisMVC.Models.SearchCriteria

@{
    ViewBag.Title = "Search";
}



 

@*@Html.Hidden("RedirectTo", Url.Action("Index", "ApplicationSearch"))
@Html.Hidden("RedirectTo", Url.Action("Index", "Home"))*@

<script>
    //var url = $("#RedirectTo").val();
    //location.href = url;

    function PostReset() {
        var result = confirm("This will reset all form fields to original state. Proceed?");
        if (result) {

            return true;
        } else {
            return false;
        }
    }

    function PostCancel() {
        var result = confirm("This will discard all changes. Proceed?");
        if (result) {
            return "there is a problem";
        } else {
            return true;
        }
    }

</script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()  

    <div class="form-horizontal">
        <h4>Search Criteria</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClaimNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClaimNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClaimNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CertificateNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CertificateNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CertificateNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.TextBoxFor(model => model.EffectiveDate, new { @class = "form-control", data_val = false })*@
                @*@Html.EditorFor(model => model.EffectiveDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.EffectiveDate, "", new {@class = "text-danger"})*@
                @Html.JQueryUI().DatepickerFor(model => model.EffectiveDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EffectiveDate, new { @class = "form-control", data_val = false })
                @*@Html.EditorFor(model => model.Account, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Account, "", new {@class = "text-danger"})*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Creditor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Creditor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Creditor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LoanNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LoanNumber, new { @class = "form-control", data_val = false })
                @*@Html.EditorFor(model => model.LoanNumber, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.LoanNumber, "", new {@class = "text-danger"})*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Search" class="btn btn-default " />
                    <input type="submit" value="Reset" class="btn btn-default" onclick="javascript:return PostReset();  "/>
                    <input type="submit" value="Cancel" class="btn btn-default" onclick="javascript:return PostCancel();"/>
                    
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>

        <div class="form-group">
            @Html.LabelFor(model => model.Creditor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Creditor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Creditor, "", new { @class = "text-danger" })
            </div>
        </div>
        <br/>
        <div class="form-group">
            @Html.LabelFor(model => model.LoanNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LoanNumber, new { @class = "form-control", data_val = false })
                @*@Html.EditorFor(model => model.LoanNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LoanNumber, "", new {@class = "text-danger"})*@
            </div>
        </div>

        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>

        <div class="form-group">
            @Html.LabelFor(model => model.Creditor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Creditor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Creditor, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
        <div class="form-group">
            @Html.LabelFor(model => model.LoanNumber, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LoanNumber, new {@class = "form-control", data_val = false})
                @*@Html.EditorFor(model => model.LoanNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LoanNumber, "", new {@class = "text-danger"})*@
            </div>
        </div>
            </div>

    </div>
   
</div>