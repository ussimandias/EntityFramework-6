@using JarvisMVC.Models
@model JarvisMVC.Models.SearchCriteria




@{
    ViewBag.Title = "Search";
}

@*@Html.Hidden("RedirectTo", Url.Action("Index", "ApplicationSearch"))
@Html.Hidden("RedirectTo", Url.Action("Index", "Home"))*@

<script>
    //var url = $("#RedirectTo").val();
    //location.href = url;

    @*Rest and Cancel Button Confirmation pop-up message on action taken by user*@
    function PostReset() {
        var result = confirm("This will reset all form fields to original state. Proceed?");
        if (result) {

            return true;
        } else {
            return false;
        }
    }

    function PostCancel() {
        var result = confirm("This will discard all changes. Proceed?");
        if (result) {
            return "there is a problem";
        } else {
            return true;
        }
    }


    @*Add focus: Positions the cursor to the first text fields*@
    $(function () {
        $('.focus :input:first').focus();
    });

    $(document).ready(function () {
        $('#datatable').dataTable();
    });


    

</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <h4>Search Criteria</h4>
    <hr />

    <div class="row">
        <div class="form-horizontal span = col-lg-6 left">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 editor-label focus">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ClaimNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClaimNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClaimNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CertificateNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CertificateNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CertificateNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                </div>

            </div>
        </div>

        <div class=" form-horizontal span = col-lg-6 right">

            <div class="form-group">
                @Html.LabelFor(model => model.EffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.TextBoxFor(model => model.EffectiveDate, new { @class = "form-control", data_val = false })*@
                    @Html.EditorFor(model => model.EffectiveDate, new {htmlAttributes = new {@class = "form-control"}})
                        @*@Html.ValidationMessageFor(model => model.EffectiveDate, "", new {@class = "text-danger"})*@
                    @*@Html.JQueryUI().DatepickerFor(model => model.EffectiveDate)*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.EffectiveDate, new { @class = "form-control", data_val = false })
                    @*@Html.EditorFor(model => model.Account, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Account, "", new {@class = "text-danger"})*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Creditor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Creditor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Creditor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LoanNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.LoanNumber, new { @class = "form-control", data_val = false })
                    @*@Html.EditorFor(model => model.LoanNumber, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.LoanNumber, "", new {@class = "text-danger"})*@
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Cancel" class="btn btn-default" onclick="javascript:return PostCancel();" />
                    <input type="submit" value="Reset" class="btn btn-default" onclick="javascript:return PostReset(); " />
                    <input type="submit" value="Search" />
                </div>
            </div>
        </div>
    </div>

}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@*<div class="container">
    <div class="row">
        <div class="span12">
            <table class="table table-striped table-bordered table-hover table-condensed" id="datatable">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Last Name</th>
                        <th>First Name</th>
                        <th>Claim Number</th>
                        <th>Certificate Number</th>
                        <th>Company Name</th>
                        <th>Effective Date</th>
                        <th>Account</th>
                        <th>Creditor</th>
                        <th>Loan Number</th>

                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td></td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>*@




